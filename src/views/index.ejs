<%- include('layout/header',{title:title}) %>
<div id="app">
  <header>
    <section>
        <label for="title">待办事项</label>
        <input type="text" id="title" name="title" ref="todoTitle" placeholder="添加待办" required="required" autocomplete="off" @keyup.enter="addTodo()" />
    </section>
  </header>
  <section>
    <h2>正在进行 <span id="todocount">{{uncompleteTodos.length}}</span></h2>
    <ol id="todolist" class="demo-box">
      <!--
      <li><input type="checkbox"><p id="p-2" onclick="edit(2)">xxx</p><a class="info"></a><a class="edit" @click="edit()"></a><a class="del"></a></li>
      <li><input type="checkbox"><p id="p-2" onclick="edit(2)">xxx</p><a class="info"></a><a class="edit"></a><a class="del"></a></li>
      <li><input type="checkbox"><p id="p-2" onclick="edit(2)">xxx</p><a class="info"></a><a class="edit"></a><a class="del"></a></li>-->
      <li v-for="todo in uncompleteTodos">
        <input type="checkbox" @click="reverseComplete(todo,false)"><p>{{todo.title}}</p><a class="info" @click="info(todo)"></a><a class="edit" @click="edit(todo)"></a><a class="del" v-on:click="remove(todo)"></a>
      </li>
    </ol>
    <h2>已经完成 <span id="donecount">{{doneTodos.length}}</span></h2>
    <ul id="donelist">
      <li v-for="todo in doneTodos">
        <input type="checkbox" checked="checked" @click="reverseComplete(todo,true)"><p>{{todo.title}}</p><a class="info" @click="info(todo)"></a><a class="edit" @click="edit(todo)"></a><a class="del" v-on:click="remove(todo)"></a>
      </li>
    </ul>
  </section>
  <footer>
    Copyright &copy; 2018 江学美 <a href="javascript:clear();">清空</a>
  </footer>
  <div class="mask" v-show="editFlag" @click.self="editFlag=false">
    <div class="todoinfo">
      <h3>编辑</h3>
      <form>
        <div class="form-item">
          <div class="tit">标题：</div>
          <div class="content">
            <input type="text" v-model="curTodo.title" />
          </div>
        </div>
        <div class="form-item">
          <div class="tit">描述：</div>
          <div class="content">
            <textarea class="txtdesc" v-model="curTodo.desc"></textarea>
          </div>
        </div>
        <div class="form-item">
          <div class="tit">时间：</div>
          <div class="content">
            <input type="text" v-model="curTodo.addtime" />
          </div>
        </div>
        <div class="form-item">
          <div class="tit">完成状态：</div>
          <div class="content">
            <input type="checkbox" v-model="curTodo.complete" />
          </div>
        </div>
        <div class="btns">
          <a class="btn commit" @click="saveEdit()">提交</a>
          <a class="btn cancel" @click="cancelEdit()">取消</a>
        </div>
        <p v-text="editFlag"></p>
      </form>
    </div>
  </div>
  <!--信息窗口-->
  <div class="mask" v-show="infoFlag" @click.self="infoFlag=false">
    <div class="todoinfo">
      <h3>详情</h3>
      <form>
        <div class="form-item">
          <div class="tit">标题：</div>
          <div class="content">
            {{curTodo.title}}
          </div>
        </div>
        <div class="form-item">
          <div class="tit">描述：</div>
          <div class="content">
            {{curTodo.desc}}
          </div>
        </div>
        <div class="form-item">
          <div class="tit">时间：</div>
          <div class="content">
            {{curTodo.addtime}}
          </div>
        </div>
        <div class="form-item">
          <div class="tit">完成状态：</div>
          <div class="content">
            {{curTodo.complete?"已完成":"进行中"}}
          </div>
        </div>
      </form>
    </div>
  </div>
</div>
<%- include('layout/publicjs.ejs') %>

<script>
  var app=new Vue({
    el:'#app',
    data:{
      editFlag:false,
      infoFlag:false,
      curTodo:{
        id: 0,
        title: "",
        desc: "",
        addtime: "",
        complete: false,
        userid: 1
      },
      todos:[]
    },
    mounted(){
      this.loadTodos();
    },
    computed:{
      uncompleteTodos:function(){
        return this.todos.length?this.todos.filter(t=>!t.complete):[];
      },
      doneTodos:function(){
        return this.todos.length?this.todos.filter(t=>t.complete):[];
      }
    },
    methods:{
      loadTodos(){
        axios.get('/api/todo/getall').then(res=>{
          var data=res.data;
          if(data.status==200){
            this.todos=data.data;
          }else{
            console.log('服务端返回了错误数据');
          }
        });
      },
      addTodo(){   //添加一个新的todo, 后期要提交到后台
        var tit=this.$refs.todoTitle.value;
        if(!tit) return;
        var newTodo={
          id: 0,
          title: tit,
          desc: "",
          addtime: new Date().format('yyyy-MM-dd HH:mm:ss'),
          complete: 0,
          userid: 1
        };
        axios.post('/api/todo/addtodo',newTodo).then(res=>{
          var data=res.data;
          if(data.status==200){
            var newData=data.data;
            this.todos.push(newData);
            this.$refs.todoTitle.value='';   //清空输入框的值
          }else{
            console.log('添加新记录失败');
          }
        });
      },
      edit(item){
        this.curTodo=Object.assign({},item);
        this.editFlag=true;
      },
      saveEdit(){
        axios.post('/api/todo/edittodo',this.curTodo).then(res=>{
          var data=res.data;
          if(data.status==200){   //修改成功就重新去获取数据
            this.editFlag=false;
            this.loadTodos();
          }else{
            console.log('修改记录失败');
          }
        });
      },
      info(item){
        this.curTodo=Object.assign({},item);
        this.infoFlag=true;
      },
      cancelEdit:function(){  //取消编辑
        this.editFlag=false;
      },
      remove(item){
        console.log(item);
        axios.post('/api/todo/delete',{id:item._id}).then(res=>{
          var data=res.data;
          if(data.status==200){   //删除成功就重新去获取数据
            this.loadTodos();
          }else{
            console.log('删除记录失败');
          }
        });
      },
      reverseComplete(todo,flag){
        axios.post('/api/todo/reverseComplete',{id:todo._id}).then(res=>{
          var data=res.data;
          if(data.status==200){   //修改成功就重新去获取数据
            this.loadTodos();
          }else{
            console.log('更新完成状态失败');
          }
        });
      }
    }
  });
</script>
<%- include('layout/footer') %>
